//insertion sort is useful and efficient
//when sorting a small number of elements
public class InsertionSort {
	public static void main(String[] args){
		//given the following array
		int arr[] = {5,2,4,6,1,3};
		
//		InsertionSort sort1 = new InsertionSort();
//		sort1.sortItems(A);
//		printAnswer(A);

		int size = arr.length; //store size of the array
		for(int i=1; i<size; i++){ //loop starting index 1 of array
			int value = arr[i]; //get key value, will be used to swap #'s
			int temp = i-1;
			//move elements of arr[0..i-1] that are
			//greater than value, to one position
			//ahead of their current position
			while(temp >= 0 && arr[i] > value){
				arr[temp+1] = arr[temp]; //moving an element to the next index
				temp = temp-1; 
			}
			arr[temp+1] = value; //allocate the value in the new index of temp+1
		}
		for(int i=0; i<size; i++){
		System.out.print(arr[i] + " ");
	}
	}
//	//insertion sort
//	public void sortItems(int arr[]){
//		int size = arr.length; //store size of the array
//		for(int i=1; i<size; i++){ //loop starting index 1 of array
//			int value = arr[i]; //get key value, will be used to swap #'s
//			int temp = i-1;
//			//move elements of arr[0..i-1] that are
//			//greater than value, to one position
//			//ahead of their current position
//			while(temp >= 0 && arr[i] > value){
//				arr[temp+1] = arr[temp]; //moving an element to the next index
//				temp = temp-1; 
//			}
//			arr[temp+1] = value; //allocate the value in the new index of temp+1
//		}
//				
//	}
//	
//	public static void printAnswer(int arr[]){
//		int size = arr.length;
//		for(int i=0; i<size; i++){
//			System.out.print(arr[i] + " ");
//		}
//		
//	}
}
